module.exports = {
    root: 'value',
    key: '"{{!label}}" ',
    any: {
        unknown: 'is niet toegestaan',
        invalid: 'bevat een ongeldige waarde',
        empty: 'mag niet leeg zijn',
        required: 'is vereist',
        allowOnly: 'moet er een van zijn {{valids}}',
        default: 'gooide een fout bij het uitvoeren van de standaardmethode',
        failover: 'fout opgetreden bij uitvoeren van failover-methode',
    },
    alternatives: {
        base: 'komt niet overeen met een van de toegestane typen',
        types: 'moet er een van zijn {{types}}',
        match: 'komt niet overeen met een van de toegestane typen',
    },
    array: {
        base: 'moet een array zijn',
        includes: 'komt niet overeen met een van de toegestane typen',
        includesRequiredUnknowns: 'bevat niet {{{knownMisses}} vereiste waarde(s)',
        includesRequiredKnowns: 'bevat geen {{knownMisses}}',
        includesRequiredBoth: 'bevat geen {{knownMisses}} en {{unknownMisses}} andere vereiste waarde(en)',
        excludes: 'bevat een Uitgesloten waarde',
        hasKnown: 'bevat niet ten minste één vereiste match voor type "{{!patternLabel}}"',
        hasUnknown: 'bevat niet ten minste één vereiste match',
        min: 'moet ten minste bevatten {{limit}} item',
        max: 'moet minder dan of gelijk aan {{limit}} item',
        length: 'moet {{limit}} items bevatten',
        orderedLength: 'moet ten hoogste {{{limit}} items bevatten',
        ref: 'referenties "{{ref}}" die geen positief geheel getal is',
        sparse: 'moet geen schaars array-item zijn',
        unique: 'bevat een dubbele waarde',
    },
    boolean: {
        base: 'moet een boolean zijn',
    },
    binary: {
        base: 'moet een buffer of een string zijn',
        min: 'moet ten minste {{limit} bytes zijn',
        max: 'moet kleiner zijn dan of gelijk aan {{limit} bytes',
        length: 'moet {{limit}} bytes zijn',
        ref: 'recommendations" {{{ref}} "which is not a positive integer',
    },
    date: {
        base: 'moet een aantal milliseconden of geldige datumstring zijn',
        strict: 'moet een geldige datum zijn',
        min: 'moet groter zijn dan of gelijk aan "{{limit}}"',
        max: 'moet kleiner zijn dan of gelijk aan "{{limit}}"',
        less: 'moet kleiner zijn dan "{{limit}}"',
        greater: 'moet groter zijn dan "{{limit}}"',
        isoDate: 'moet een geldige ISO 8601-Datum zijn',
        timestamp: {
            javascript: 'must be a valid timestamp or number of milliseconden',
            unix: 'moet een geldige tijdstempel of aantal seconden zijn',
        },
        ref: 'revisions "{{ref}}" which is not a date',
    },
    function: {
        base: 'moet een functie zijn',
        arity: 'must have a arity of {{n}}',
        class: 'moet een klasse zijn',
        maxArity: 'must have a arity lesser or equal to {{n}}',
        minArity: 'must have a arity greater or equal to {{n}}',
    },
    lazy: {
        base: '!!schema fout: luie schema moet worden ingesteld',
        schema: '!!schema fout: luie schema-functie moet een schema teruggeven',
    },
    object: {
        base: 'moet een object zijn',
        allowUnknown: 'is not allowed',
        and: 'bevat {{presentWithLabels}} zonder de vereiste peers {{missingWithLabels}}',
        assert: 'is ongeldig omdat "{{ref}}" mislukt is op {{message}}',
        length: 'moet {{limit}} kinderen hebben',
        max: 'moet minder dan of gelijk aan {{limit}} kinderen hebben',
        min: 'moet ten minste {{limit}} kinderen hebben',
        missing: 'moet ten minste één van {{peersWithLabels}} bevatten',
        nand: '!!"{{mainWithLabel}}" mag niet gelijktijdig bestaan met {{peersWithLabels}}',
        oxor: 'bevat een conflict tussen optionele exclusieve gelijken {{peersWithLabels}}',
        ref: 'recommendations "{{ref}}" which is not a positive integer',
        refType: 'must be a Joi reference',
        rename: {
            multiple: 'kan kind "{{from}}" niet hernoemen omdat meerdere namen uitgeschakeld zijn en een andere sleutel al hernoemd is naar "{{to}}"',
            override: 'kan kind "{{from}}" niet hernoemen omdat override uitgeschakeld is en doel "{{to}}" bestaat',
            regex: {
                multiple: 'kan kinderen "{{from}}" niet hernoemen omdat meerdere namen uitgeschakeld zijn en een andere sleutel al hernoemd is naar "{{to}}"',
                override: 'kan kinderen "{{from}}" niet hernoemen omdat override uitgeschakeld is en het doel "{{to}}" bestaat',
            },
        },
        schema: 'moet een Joi schema van {{type}} type zijn',
        type: 'must be an instantie of "{{type}}"',
        met: '!!"{{mainWithLabel}}" ontbrekende vereiste peer "{{peerWithLabel}}"',
        zonder: '!!"{{mainWithLabel}}" conflict met forbidden "{{peerWithLabel}}"',
        xor: 'bevat een conflict tussen exclusieve {{peerWithLabels}}',
    },
    number: {
        base: 'moet een getal zijn',
        unsafe: 'moet een veilig nummer zijn',
        min: 'moet groter zijn dan of gelijk aan {{limit}}',
        max: 'moet kleiner zijn dan of gelijk aan {{limit}}',
        less: 'moet kleiner zijn dan {{limit}}',
        greater: 'moet groter zijn dan {{limit}}',
        integer: 'moet een geheel getal zijn',
        negative: 'moet een negatief getal zijn',
        positive: 'moet een positief getal zijn',
        precision: 'mag niet meer dan {{limit}} decimalen hebben',
        ref: 'revisions "{{ref}}" which is not a number',
        multiple: 'must be a multiple of {{multiple}}',
        haven: 'moet een geldige haven zijn',
    },
    string: {
        base: 'moet een tekenreeks zijn',
        min: 'lengte moet ten minste {{limit}} tekens lang zijn',
        max: 'lengte moet kleiner zijn dan of gelijk aan {{limit}} tekens lang',
        length: 'lengte moet {{limit}} tekens lang zijn',
        alphanum: 'mag alleen alfanumerieke tekens bevatten',
        token: 'mag alleen alfanumerieke en underscore tekens bevatten',
        regex: {
            base: 'met waar "{{!value}}" komt het vereiste patroon niet overeen: {{pattern}}',
            naam: 'met waarde "{{!value}}" komt niet overeen met het {{name}} patroon',
            inverteer: {
                basis: 'met waarde "{{!value}}" komt overeen met het omgekeerde patroon: {{pattern}}',
                naam: 'met waarde "{{!value}}" komt overeen met het omgekeerde {{name}} patroon',
            },
        },
        domain: 'moet een geldige domeinnaam bevatten',
        email: 'moet een geldige e-mail zijn',
        uri: 'moet een geldige uri zijn',
        uriRelativeOnly: 'moet een geldige relatieve uri zijn',
        uriCustomScheme: 'moet een geldige uri zijn met een schema dat overeenkomt met het {{scheme}} patroon',
        isoDate: 'moet een geldige ISO 8601-Datum zijn',
        isoDuration: 'moet een geldige ISO 8601-duur zijn',
        guid: 'moet een geldige GUID zijn',
        hex: 'mag alleen hexadecimale tekens bevatten',
        hexAlign: 'hex-decoded representation must be byte uitgelijnd',
        base64: 'moet een geldige base64 string zijn',
        dataUri: 'moet een geldige datauri string zijn',
        hostnaam: 'moet een geldige hostnaam zijn',
        normalize: 'moet unicode genormaliseerd zijn in de {{form}} vorm',
        lowercase: 'mag alleen kleine letters bevatten',
        uppercase: 'mag alleen hoofdletters bevatten',
        trim: 'mag geen witruimte hebben die leidt of achterloopt',
        creditCard: 'moet een creditcard zijn',
        ref: 'revisions "{{ref}}" which is not a number',
        ip: 'moet een geldig ip-adres zijn met een {{cidr}} CIDR',
        ipVersion: 'moet een geldig ip adres zijn van een van de volgende versies {{version}} met een {{cidr}} CIDR',

    },
};
